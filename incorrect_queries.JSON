-- Original query 1:
-- SELECT DISTINCT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2	thrombosis_prediction

-- Explanation 1: Incorrect values in conditions
SELECT DISTINCT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 1

-- Explanation 2: Modified JOIN conditions
SELECT DISTINCT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.Thrombosis WHERE T2.Thrombosis = 2

================================================================================

-- Original query 2:
-- SELECT DISTINCT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T2.uuid = T1.uuid WHERE T1.frameVersion = 1997 AND T1.hasContentWarning = 1 AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy'	card_games

-- Explanation 1: Incorrect values in conditions
SELECT DISTINCT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T2.uuid = T1.uuid WHERE T1.frameVersion = 2000 AND T1.hasContentWarning = 0 AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy'

-- Explanation 2: Modified JOIN conditions
SELECT DISTINCT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T2.artist = T1.artist WHERE T1.frameVersion = 1997 AND T1.hasContentWarning = 1 AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy'

-- Explanation 3: Swapped AND/OR operators
SELECT DISTINCT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T2.uuid = T1.uuid WHERE T1.frameVersion = 1997 AND T1.hasContentWarning = 1 OR T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy'

-- Explanation 4: Added/removed WHERE conditions
SELECT DISTINCT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T2.uuid = T1.uuid WHERE T1.frameVersion = 1997 AND T1.hasContentWarning = 1 AND T2.format = 'legacy' OR T1.artist = 'D. Alexander Gregory'

================================================================================

-- Original query 3:
-- SELECT T3.client_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T4 ON T4.account_id = T2.account_id  INNER JOIN client AS T3 ON T4.client_id = T3.client_id WHERE T1.order_id = 32423	financial

-- Explanation 1: Incorrect values in conditions
SELECT T3.client\_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account\_id = T2.account\_id INNER JOIN disp AS T4 ON T4.account\_id = T2.account\_id INNER JOIN client AS T3 ON T4.client\_id = T3.client\_id WHERE T1.order\_id = 999999999

-- Explanation 2: Wrong comparison operators (= instead of !=)
SELECT T3.client\_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account\_id = T2.account\_id INNER JOIN disp AS T4 ON T4.account\_id = T2.account\_id INNER JOIN client AS T3 ON T4.client\_id = T3.client\_id WHERE T1.order\_id != 32423

-- Explanation 3: Modified JOIN conditions (using = instead of ON)
SELECT T3.client\_id FROM `order` = T1 INNER JOIN account = T2 ON T1.account\_id = T2.account\_id INNER JOIN disp = T4 ON T4.account\_id = T2.account\_id INNER JOIN client = T3 ON T4.client\_id = T3.client\_id WHERE T1.order\_id = 32423

-- Explanation 4: Added WHERE condition (random column and value)
SELECT T3.client\_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account\_id = T2.account\_id INNER JOIN disp AS T4 ON T4.account\_id = T2.account\_id INNER JOIN client AS T3 ON T4.client\_id = T3.client\_id WHERE T1.order\_id = 32423 AND T2.random\_column = 'random\_value'

================================================================================

-- Original query 4:
-- SELECT T1.AvgScrWrite, T2.City FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1	california_schools

-- Explanation 1: Incorrect values in conditions
SELECT T1.AvgScrWrite, T2.City FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1000

-- Explanation 2: Swapped AND/OR operators
SELECT T1.AvgScrWrite, T2.City FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode AND T1.NumGE1500 <> T2.NumGE1500 ORDER BY T1.NumGE1500 DESC LIMIT 1

-- Explanation 3: Modified JOIN conditions
SELECT T1.AvgScrWrite, T2.City FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.AvgScrWrite = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1

================================================================================

-- Original query 5:
-- SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '='	toxicology

-- Explanation 1: Modified JOIN condition for bond table
SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T2.molecule_id = T1.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '='

-- Explanation 2: Incorrect value in condition for bond_type
SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '~'

-- Explanation 3: Added extra condition in WHERE clause
SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '=' AND T1.element IS NULL

-- Explanation 4: Changed ORDER BY direction
SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '=' ORDER BY T1.element DESC

-- Explanation 5: Wrong LIMIT/OFFSET values
SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '=' LIMIT 0 OFFSET 1000000

================================================================================

-- Original query 6:
-- SELECT player_api_id FROM Player_Attributes WHERE SUBSTR(`date`, 1, 4) = '2010' ORDER BY overall_rating DESC LIMIT 1	european_football_2

-- Explanation 1: Incorrect values in conditions
SELECT player_api_id FROM Player_Attributes WHERE SUBSTR(`date`, 1, 4) = '2011' ORDER BY overall_rating DESC LIMIT 1

-- Explanation 2: Swapped AND/OR operators
SELECT player_api_id FROM Player_Attributes WHERE SUBSTR(`date`, 1, 4) = '2010' AND overall_rating > 90 ORDER BY overall_rating DESC LIMIT 1

-- Explanation 3: Changed ORDER BY direction
SELECT player_api_id FROM Player_Attributes WHERE SUBSTR(`date`, 1, 4) = '2010' ORDER BY overall_rating ASC LIMIT 1

================================================================================

-- Original query 7:
-- SELECT T3.forename, T3.surname, T2.points FROM races AS T1 INNER JOIN driverStandings AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId ORDER BY T2.points DESC LIMIT 1	formula_1

-- Explanation 1: Modified JOIN condition using '!=' instead of '='
SELECT T3.forename, T3.surname, T2.points FROM races AS T1 INNER JOIN driverStandings AS T2 ON T2.raceId != T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId ORDER BY T2.points DESC LIMIT 1

================================================================================

-- Original query 8:
-- WITH lap_times_in_seconds AS (SELECT driverId, (CASE WHEN SUBSTR(time, 1, INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, 1, INSTR(time, ':') - 1) AS REAL) * 60 ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL) ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, '.') + 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, '.') + 1) AS REAL) / 1000 ELSE 0 END) AS time_in_seconds FROM lapTimes) SELECT T2.forename, T2.surname, T1.driverId FROM (SELECT driverId, MIN(time_in_seconds) AS min_time_in_seconds FROM lap_times_in_seconds GROUP BY driverId) AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.min_time_in_seconds ASC LIMIT 20	formula_1

-- Explanation 2: Modified JOIN condition by comparing different columns
WITH lap_times_in_seconds AS (SELECT driverId, (CASE WHEN SUBSTR(time, 1, INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, 1, INSTR(time, ':') - 1) AS REAL) * 60 ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') -

================================================================================

-- Original query 9:
-- SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.FG <= 150 OR T2.FG >= 450 AND T2.WBC > 3.5 AND T2.WBC < 9.0 AND T1.SEX = 'M'	thrombosis_prediction

-- Explanation 1: Changed = to !=
SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID != T2.ID WHERE T2.FG <!= 150 OR T2.FG >!= 450 AND T2.WBC > 3.5 AND T2.WBC < 9.0 AND T1.SEX != 'M'	thrombosis_prediction

-- Explanation 2: Added false condition
SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.FG <= 150 OR T2.FG >= 450 AND T2.WBC > 3.5 AND T2.WBC < 9.0 AND T1.SEX = 'M'	thrombosis_prediction AND 1=0

================================================================================

-- Original query 10:
-- SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date BETWEEN '1995-01-01' AND '1997-12-31' AND T1.frequency = 'POPLATEK MESICNE' AND T2.amount >= 250000	financial

-- Explanation 1: Modified JOIN condition using "NOT" operator
SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id != T2.account_id WHERE T2.date BETWEEN '1995-01-01' AND '1997-12-31' AND T1.frequency = 'POPLATEK MESICNE' AND T2.amount >= 250000

-- Explanation 2: Changed AND operator to OR operator in WHERE condition
SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date BETWEEN '1995-01-01' AND '1997-12-31' OR T1.frequency = 'POPLATEK MESICNE' AND T2.amount >= 250000

================================================================================

-- Original query 11:
-- SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.isReprint = 1	card_games

-- Explanation 1: Modified JOIN conditions
SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid != T2.uuid WHERE T2.language = 'German' AND T1.isReprint = 1

-- Explanation 2: Incorrect values in conditions
SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'French' AND T1.isReprint = 1

-- Explanation 3: Swapped AND/OR operators
SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' OR T1.isReprint = 1 AND T1.isReprint = 2

================================================================================

-- Original query 12:
-- SELECT T2.Currency FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '201306' AND T1.Consumption = 214582.17	debit_card_specializing

-- Explanation 1: Incorrect value in condition for Date
SELECT T2.Currency FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '201307' AND T1.Consumption = 214582.17

-- Explanation 2: Modified JOIN condition using wrong column
SELECT T2.Currency FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.Currency = T2.CustomerID WHERE T1.Date = '201306' AND T1.Consumption = 214582.17

-- Explanation 3: Swapped AND/OR operators
SELECT T2.Currency FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '201306' OR T1.Consumption = 214582.17  -- this will return all customers with any date, not just June 2013

================================================================================

-- Original query 13:
-- SELECT COUNT(DISTINCT T.element) FROM ( SELECT DISTINCT T2.molecule_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '-' ) AS T	toxicology

-- Explanation 1: Changed = to !=
SELECT COUNT(DISTINCT T.element) FROM ( SELECT DISTINCT T2.molecule_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id != T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id != T3.molecule_id WHERE T3.bond_type != '-' ) AS T	toxicology

================================================================================

-- Original query 14:
-- SELECT T3.race FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN race AS T3 ON T1.race_id = T3.id ORDER BY T2.attribute_value DESC LIMIT 1	superhero

-- Explanation 1: Incorrect values in conditions
SELECT T3.race FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN race AS T3 ON T1.race_id = T3.id ORDER BY T2.attribute_value ASC LIMIT 1

-- Explanation 2: Swapped AND/OR operators
SELECT T3.race FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id AND T1.race_id = T3.id INNER JOIN race AS T3 ON T2.hero_id = T1.id ORDER BY T2.attribute_value DESC LIMIT 1

-- Explanation 3: Wrong comparison operators
SELECT T3.race FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id != T2.hero_id INNER JOIN race AS T3 ON T1.race_id = T3.id ORDER BY T2.attribute_value DESC LIMIT 1

-- Explanation 4: Wrong LIMIT/OFFSET values
SELECT T3.race FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN race AS T3 ON T1.race_id = T3.id ORDER BY T2.attribute_value DESC LIMIT 1000

================================================================================

-- Original query 15:
-- SELECT CAST(SUM(IIF(STRFTIME('%Y', T3.dob) < '1985' AND T1.laps > 50, 1, 0)) AS REAL) * 100 / COUNT(*) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T2.year BETWEEN 2000 AND 2005	formula_1

-- Explanation 1: Changed = to !=
SELECT CAST(SUM(IIF(STRFTIME('%Y', T3.dob) < '1985' AND T1.laps > 50, 1, 0)) AS REAL) * 100 / COUNT(*) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId != T2.raceId INNER JOIN drivers AS T3 on T1.driverId != T3.driverId WHERE T2.year BETWEEN 2000 AND 2005	formula_1

-- Explanation 2: Added false condition
SELECT CAST(SUM(IIF(STRFTIME('%Y', T3.dob) < '1985' AND T1.laps > 50, 1, 0)) AS REAL) * 100 / COUNT(*) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T2.year BETWEEN 2000 AND 2005	formula_1 AND 1=0

-- Explanation 3: Reversed ORDER BY
SELECT CAST(SUM(IIF(STRFTIME('%Y', T3.dob) < '1985' AND T1.laps > 50, 1, 0)) AS REAL) * 100 / COUNT(*) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T2.year BETWEEN 2000 AND 2005	formula_1 ORDER BY 1 DESC

================================================================================

-- Original query 16:
-- SELECT T2.driverId, T2.code FROM results AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE STRFTIME('%Y', T2.dob) = '1971' AND T1.fastestLapTime IS NOT NULL	formula_1

-- Explanation 1: Incorrect values in conditions
SELECT T2.driverId, T2.code FROM results AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE STRFTIME('%Y', T2.dob) = '1972' AND T1.fastestLapTime IS NOT NULL;

-- Explanation 2: Swapped AND/OR operators
SELECT T2.driverId, T2.code FROM results AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE STRFTIME('%Y', T2.dob) = '1971' OR T1.fastestLapTime IS NOT NULL;

-- Explanation 3: Modified JOIN conditions
SELECT T2.driverId, T2.code FROM results AS T1 LEFT JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE STRFTIME('%Y', T2.dob) = '1971' AND T1.fastestLapTime IS NOT NULL;

================================================================================

-- Original query 17:
-- SELECT T1.label FROM molecule AS T1 INNER JOIN ( SELECT T.molecule_id, COUNT(T.bond_type) FROM bond AS T WHERE T.bond_type = '=' GROUP BY T.molecule_id ORDER BY COUNT(T.bond_type) DESC LIMIT 1 ) AS T2 ON T1.molecule_id = T2.molecule_id	toxicology

-- Explanation 1: Changed = to !=
SELECT T1.label FROM molecule AS T1 INNER JOIN ( SELECT T.molecule_id, COUNT(T.bond_type) FROM bond AS T WHERE T.bond_type != '!=' GROUP BY T.molecule_id ORDER BY COUNT(T.bond_type) DESC LIMIT 1 ) AS T2 ON T1.molecule_id != T2.molecule_id	toxicology

-- Explanation 2: Added false condition
SELECT T1.label FROM molecule AS T1 INNER JOIN ( SELECT T.molecule_id, COUNT(T.bond_type) FROM bond AS T WHERE T.bond_type = '=' GROUP BY T.molecule_id ORDER BY COUNT(T.bond_type) DESC LIMIT 1 ) AS T2 ON T1.molecule_id = T2.molecule_id	toxicology AND 1=0

-- Explanation 3: Reversed ORDER BY
SELECT T1.label FROM molecule AS T1 INNER JOIN ( SELECT T.molecule_id, COUNT(T.bond_type) FROM bond AS T WHERE T.bond_type = '=' GROUP BY T.molecule_id ORDER BY COUNT(T.bond_type) ASC LIMIT 1 ) AS T2 ON T1.molecule_id = T2.molecule_id	toxicology

-- Explanation 4: Limited to 1 row
SELECT T1.label FROM molecule AS T1 INNER JOIN ( SELECT T.molecule_id, COUNT(T.bond_type) FROM bond AS T WHERE T.bond_type = '=' GROUP BY T.molecule_id ORDER BY COUNT(T.bond_type) DESC LIMIT 1 1 ) AS T2 ON T1.molecule_id = T2.molecule_id	toxicology

================================================================================

-- Original query 18:
-- SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap' ORDER BY T1.convertedManaCost DESC LIMIT 1	card_games

-- Explanation 1: Modified JOIN condition using `<` instead of `=`
SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code < T1.setCode WHERE T2.name = 'Coldsnap' ORDER BY T1.convertedManaCost DESC LIMIT 1

================================================================================

-- Original query 19:
-- SELECT T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T2.setCode = T1.code WHERE T2.translation = 'Rinascita di Alara'	card_games

-- Explanation 1: Changed = to !=
SELECT T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T2.setCode != T1.code WHERE T2.translation != 'Rinascita di Alara'	card_games

================================================================================

-- Original query 20:
-- SELECT T1.forename, T1.surname, T1.nationality, T3.name FROM drivers AS T1 INNER JOIN driverStandings AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 on T2.raceId = T3.raceId ORDER BY JULIANDAY(T1.dob) DESC LIMIT 1	formula_1

-- Explanation 1: Changed = to !=
SELECT T1.forename, T1.surname, T1.nationality, T3.name FROM drivers AS T1 INNER JOIN driverStandings AS T2 on T1.driverId != T2.driverId INNER JOIN races AS T3 on T2.raceId != T3.raceId ORDER BY JULIANDAY(T1.dob) DESC LIMIT 1	formula_1

-- Explanation 2: Added false condition
SELECT T1.forename, T1.surname, T1.nationality, T3.name FROM drivers AS T1 INNER JOIN driverStandings AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 on T2.raceId = T3.raceId ORDER BY JULIANDAY(T1.dob) DESC LIMIT 1	formula_1 WHERE 1=0

================================================================================

-- Original query 21:
-- SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.label = '+'	toxicology

-- Explanation 1: Incorrect values in conditions
SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.label = '-'

-- Explanation 2: Swapped AND/OR operators
SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.label = '+' AND 'toxicology'

================================================================================

-- Original query 22:
-- SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'n' AND T1.label = '+'	toxicology

-- Explanation 1: Changed = to !=
SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id != T2.molecule_id WHERE T2.element != 'n' AND T1.label != '+'	toxicology

-- Explanation 2: Added false condition
SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'n' AND T1.label = '+'	toxicology AND 1=0

-- Explanation 3: Reversed ORDER BY
SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'n' AND T1.label = '+'	toxicology ORDER BY 1 DESC

-- Explanation 4: Limited to 1 row
SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'n' AND T1.label = '+'	toxicology LIMIT 1

================================================================================

-- Original query 23:
-- SELECT T2.fastestLapTime FROM drivers AS T1 INNER JOIN results AS T2 ON T2.driverId = T1.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime ASC LIMIT 1	formula_1

-- Explanation 1: Changed = to !=
SELECT T2.fastestLapTime FROM drivers AS T1 INNER JOIN results AS T2 ON T2.driverId != T1.driverId WHERE T1.forename != 'Lewis' AND T1.surname != 'Hamilton' AND T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime ASC LIMIT 1	formula_1

================================================================================

-- Original query 24:
-- SELECT T2.date FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.name = 'Brands Hatch' AND T2.name = 'British Grand Prix' ORDER BY T2.year DESC LIMIT 1	formula_1

-- Explanation 1: Incorrect values in conditions
SELECT T2.date FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.name = 'Brands Hatch' AND T2.name = 'Monaco Grand Prix' ORDER BY T2.year DESC LIMIT 1

-- Explanation 2: Swapped AND/OR operators
SELECT T2.date FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.name = 'Brands Hatch' OR T2.name = 'British Grand Prix' ORDER BY T2.year DESC LIMIT 1

================================================================================

-- Original query 25:
-- SELECT id, language FROM set_translations WHERE id = ( SELECT id FROM cards WHERE convertedManaCost = 5 ) AND setCode = '10E'	card_games

-- Explanation 1: Incorrect values in conditions
SELECT id, language FROM set_translations WHERE id = ( SELECT id FROM cards WHERE convertedManaCost != 5 ) AND setCode = '10E'

-- Explanation 2: Swapped AND/OR operators
SELECT id, language FROM set_translations WHERE id = ( SELECT id FROM cards WHERE convertedManaCost = 5 ) OR setCode = '10E'

================================================================================

-- Original query 26:
-- SELECT AVG(CAST(SUBSTR(T2.fastestLapTime, 1, INSTR(T2.fastestLapTime, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(T2.fastestLapTime, INSTR(T2.fastestLapTime, ':') + 1) AS REAL)) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.surname = 'Hamilton' AND T1.forename = 'Lewis'	formula_1

-- Explanation 1: Changed = to !=
SELECT AVG(CAST(SUBSTR(T2.fastestLapTime, 1, INSTR(T2.fastestLapTime, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(T2.fastestLapTime, INSTR(T2.fastestLapTime, ':') + 1) AS REAL)) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId != T2.driverId WHERE T1.surname != 'Hamilton' AND T1.forename != 'Lewis'	formula_1

-- Explanation 2: Added false condition
SELECT AVG(CAST(SUBSTR(T2.fastestLapTime, 1, INSTR(T2.fastestLapTime, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(T2.fastestLapTime, INSTR(T2.fastestLapTime, ':') + 1) AS REAL)) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.surname = 'Hamilton' AND T1.forename = 'Lewis'	formula_1 AND 1=0

================================================================================

-- Original query 27:
-- SELECT T1.lap FROM pitStops AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 on T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.year = 2011 AND T3.name = 'Australian Grand Prix'	formula_1

-- Explanation 1: Incorrect values in conditions
SELECT T1.lap FROM pitStops AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 on T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.year = 2012 AND T3.name = 'Australian Grand Prix'

-- Explanation 2: Swapped AND/OR operators
SELECT T1.lap FROM pitStops AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 on T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' OR T2.surname = 'Hamilton' AND T3.year = 2011 AND T3.name = 'Australian Grand Prix'

-- Explanation 3: Modified JOIN conditions
SELECT T1.lap FROM pitStops AS T1 INNER JOIN drivers AS T2 on T1.raceId = T2.driverId INNER JOIN races AS T3 on T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.year = 2011 AND T3.name = 'Australian Grand Prix'

================================================================================

-- Original query 28:
-- SELECT nationality FROM drivers WHERE dob IS NOT NULL ORDER BY dob ASC LIMIT 1	formula_1

-- Explanation 2: Swapped AND/OR operator
SELECT nationality FROM drivers WHERE dob IS NOT NULL OR dob IS NULL ORDER BY dob ASC LIMIT 1

-- Explanation 3: Wrong comparison operator
SELECT nationality FROM drivers WHERE dob IS NOT = NULL ORDER BY dob ASC LIMIT 1

================================================================================

-- Original query 29:
-- SELECT COUNT(T2.Id) FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId GROUP BY T1.Id ORDER BY SUM(T1.Score) DESC LIMIT 1	codebase_community

-- Explanation 1: Modified JOIN condition using != operator
SELECT COUNT(T2.Id) FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id != T2.PostId GROUP BY T1.Id ORDER BY SUM(T1.Score) DESC LIMIT 1

================================================================================

-- Original query 30:
-- SELECT T.atom_id FROM connected AS T WHERE T.bond_id = 'TR000_2_5'	toxicology

-- Explanation 1: Incorrect values in conditions
SELECT T.atom_id FROM connected AS T WHERE T.bond_id != 'TR000_2_5'

-- Explanation 2: Swapped AND/OR operators
SELECT T.atom_id FROM connected AS T WHERE T.bond_id = 'TR000_2_5' OR T.atom_id = 1

-- Explanation 3: Added WHERE condition
SELECT T.atom_id FROM connected AS T WHERE T.bond_id = 'TR000_2_5' AND T.atom_id = 0

-- Explanation 4: Wrong LIMIT value
SELECT T.atom_id FROM connected AS T WHERE T.bond_id = 'TR000_2_5' LIMIT 0

================================================================================

-- Original query 31:
-- SELECT T2.AdmEmail1, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1	california_schools

-- Explanation 1: Incorrect values in conditions
SELECT T2.AdmEmail1, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 ASC LIMIT 1

-- Explanation 2: Wrong comparison operators (= instead of !=)
SELECT T2.AdmEmail1, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds != T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1

-- Explanation 3: Modified JOIN conditions (using AND instead of OR)
SELECT T2.AdmEmail1, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode AND T1.SATMathematicsLevel = 'Level 3' ORDER BY T1.NumGE1500 DESC LIMIT 1

-- Explanation 4: Changed ORDER BY direction (using ASC instead of DESC)
SELECT T2.AdmEmail1, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 ASC LIMIT 1

================================================================================

-- Original query 32:
-- SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Engineering'	student_club

-- Explanation 1: Modified JOIN condition using != instead of =
SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major != T2.major_id WHERE T2.college = 'College of Engineering'

================================================================================

-- Original query 33:
-- SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'	student_club

-- Explanation 1: Incorrect values in conditions
SELECT notes FROM income WHERE source != 'Fundraising' AND date_received = '2019-09-14'

-- Explanation 2: Swapped AND/OR operators
SELECT notes FROM income WHERE source = 'Fundraising' OR date_received = '2019-09-14'

================================================================================

-- Original query 34:
-- SELECT T2.Street, T2.City, T2.State, T2.Zip FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY CAST(T1.NumGE1500 AS REAL) / T1.NumTstTakr ASC LIMIT 1	california_schools

-- Explanation 1: Incorrect values in conditions
SELECT T2.Street, T2.City, T2.State, T2.Zip FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY CAST(T1.NumGE1500 AS REAL) / T1.NumTstTakr ASC LIMIT 1 WHERE T2.State = 'CO'

-- Explanation 2: Wrong comparison operators
SELECT T2.Street, T2.City, T2.State, T2.Zip FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.cds != T2.CDSCode ORDER BY CAST(T1.NumGE1500 AS REAL) / T1.NumTstTakr ASC LIMIT 1

-- Explanation 3: Modified JOIN conditions
SELECT T2.Street, T2.City, T2.State, T2.Zip FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.NumGE1500 = T2.CDSCode ORDER BY CAST(T1.NumGE1500 AS REAL) / T1.NumTstTakr ASC LIMIT 1

-- Explanation 4: Changed ORDER BY direction
SELECT T2.Street, T2.City, T2.State, T2.Zip FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY CAST(T1.NumGE1500 AS REAL) / T1.NumTstTakr DESC LIMIT 1

================================================================================

-- Original query 35:
-- SELECT CAST(SUM(T1.A2 = 'Decin') AS REAL) * 100 / COUNT(account_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T2.date) = '1993'	financial

-- Explanation 1: Incorrect values in conditions
SELECT CAST(SUM(T1.A2 = 'Jecin') AS REAL) * 100 / COUNT(account\_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district\_id = T2.district\_id WHERE STRFTIME('%Y', T2.date) = '1994'

-- Explanation 2: Modified JOIN conditions
SELECT CAST(SUM(T1.A2 = 'Decin') AS REAL) * 100 / COUNT(account\_id) FROM district AS T1 RIGHT JOIN account AS T2 ON T1.account\_id = T2.district\_id WHERE STRFTIME('%Y', T2.date) = '1993'

================================================================================

-- Original query 36:
-- SELECT CAST(COUNT(CASE WHEN T3.alignment = 'Good' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics'	superhero

-- Explanation 1: Changed = to !=
SELECT CAST(COUNT(CASE WHEN T3.alignment != 'Good' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id != T2.id INNER JOIN alignment AS T3 ON T1.alignment_id != T3.id WHERE T2.publisher_name != 'Marvel Comics'	superhero

-- Explanation 2: Added false condition
SELECT CAST(COUNT(CASE WHEN T3.alignment = 'Good' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics'	superhero AND 1=0

-- Explanation 3: Reversed ORDER BY
SELECT CAST(COUNT(CASE WHEN T3.alignment = 'Good' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics'	superhero ORDER BY 1 DESC

================================================================================

-- Original query 37:
-- SELECT `aCL IgA`, `aCL IgG`, `aCL IgM` FROM Examination WHERE ID IN ( SELECT ID FROM Patient WHERE Diagnosis = 'SLE' AND Description = '1994-02-19' ) AND `Examination Date` = '1993-11-12'	thrombosis_prediction

-- Explanation 1: Incorrect values in conditions
SELECT `aCL IgA`, `aCL IgG`, `aCL IgM` FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE Diagnosis = 'SLE' AND Description = '1995-02-19' ) AND `Examination Date` = '1993-11-12'

-- Explanation 2: Swapped AND/OR operators
SELECT `aCL IgA`, `aCL IgG`, `aCL IgM` FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE Diagnosis = 'SLE' OR Description = '1994-02-19' ) AND `Examination Date` = '1993-11-12'

================================================================================

-- Original query 38:
-- SELECT DISTINCT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.WBC <= 3.5 OR T2.WBC >= 9.0 GROUP BY T1.SEX,T1.ID ORDER BY T1.Birthday ASC	thrombosis_prediction

-- Explanation 1: Swapped AND/OR operators
SELECT DISTINCT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.WBC <= 3.5 AND T2.WBC >= 9.0 GROUP BY T1.SEX,T1.ID ORDER BY T1.Birthday ASC

-- Explanation 2: Incorrect values in conditions
SELECT DISTINCT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.WBC <= 10.0 OR T2.WBC >= 20.0 GROUP BY T1.SEX,T1.ID ORDER BY T1.Birthday ASC

-- Explanation 3: Changed ORDER BY direction
SELECT DISTINCT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.WBC <= 3.5 OR T2.WBC >= 9.0 GROUP BY T1.SEX,T1.ID ORDER BY T1.Birthday DESC

-- Explanation 4: Modified JOIN conditions
SELECT DISTINCT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = 'T2.ID' WHERE T2.WBC <= 3.5 OR T2.WBC >= 9.0 GROUP BY T1.SEX,T1.ID ORDER BY T1.Birthday ASC

================================================================================

-- Original query 39:
-- SELECT T3.ANA FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` < 2.0 ORDER BY T2.`T-BIL` DESC LIMIT 1	thrombosis_prediction

-- Explanation 1: Incorrect values in conditions
SELECT T3.ANA FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` < 1.0 ORDER BY T2.`T-BIL` DESC LIMIT 1

-- Explanation 2: Modified JOIN conditions
SELECT T3.ANA FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T2.ID = T1.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` < 2.0 ORDER BY T2.`T-BIL` DESC LIMIT 1

-- Explanation 3: Changed ORDER BY direction
SELECT T3.ANA FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` < 2.0 ORDER BY T2.`T-BIL` ASC LIMIT 1

-- Explanation 4: Added/removed WHERE conditions
SELECT T3.ANA FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID ORDER BY T2.`T-BIL` DESC LIMIT 1

================================================================================

-- Original query 40:
-- SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND T1.Thrombosis = 0	thrombosis_prediction

-- Explanation 1: Changed = to !=
SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID != T2.ID WHERE T2.RF < 20 AND T1.Thrombosis != 0	thrombosis_prediction

-- Explanation 2: Added false condition
SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND T1.Thrombosis = 0	thrombosis_prediction AND 1=0

-- Explanation 3: Reversed ORDER BY
SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND T1.Thrombosis = 0	thrombosis_prediction ORDER BY 1 DESC

-- Explanation 4: Limited to 1 row
SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND T1.Thrombosis = 0	thrombosis_prediction LIMIT 1

================================================================================

-- Original query 41:
-- SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Price = 548.4	debit_card_specializing

-- Explanation 1: Modified JOIN conditions using the `<>` operator
SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID <> T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Price = 548.4

-- Explanation 2: Incorrect value in the condition for the Date column
SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Price = 548.4

================================================================================

-- Original query 42:
-- SELECT T3.forename, T3.surname, T3.driverRef FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T1.name = 'Canadian Grand Prix' AND T2.rank = 1 AND T1.year = 2007	formula_1

-- Explanation 1: Incorrect values in conditions
SELECT T3.forename, T3.surname, T3.driverRef FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T1.name = 'American Grand Prix' AND T2.rank = 1 AND T1.year = 2007

-- Explanation 2: Modified JOIN conditions
SELECT T3.forename, T3.surname, T3.driverRef FROM races AS T1 INNER JOIN results AS T2 ON T2.driverId = T1.driverId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T1.name = 'Canadian Grand Prix' AND T2.rank = 1 AND T1.year = 2007

================================================================================

-- Original query 43:
-- SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 's' AND T2.bond_type = '='	toxicology

-- Explanation 1: Changed = to !=
SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id != T2.molecule_id WHERE T1.element != 's' AND T2.bond_type != '!='	toxicology

-- Explanation 2: Added false condition
SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 's' AND T2.bond_type = '='	toxicology AND 1=0

-- Explanation 3: Reversed ORDER BY
SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 's' AND T2.bond_type = '='	toxicology ORDER BY 1 DESC

-- Explanation 4: Limited to 1 row
SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 's' AND T2.bond_type = '='	toxicology LIMIT 1

================================================================================

-- Original query 44:
-- SELECT T2.name FROM constructorStandings AS T1 INNER JOIN constructors AS T2 on T1.constructorId = T2.constructorId ORDER BY T1.points DESC LIMIT 1	formula_1

-- Explanation 2: Incorrect values in conditions
SELECT T2.name FROM constructorStandings AS T1 INNER JOIN constructors AS T2 on T1.constructorId = T2.constructorId + 1 ORDER BY T1.points DESC LIMIT 1

-- Explanation 3: Modified JOIN conditions
SELECT T2.name FROM constructorStandings AS T1 INNER JOIN constructors AS T2 on T1.constructorId = T2.constructorName ORDER BY T1.points DESC LIMIT 1

================================================================================

-- Original query 45:
-- SELECT COUNT(Id) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0	codebase_community

-- Explanation 1: Incorrect values in conditions
SELECT COUNT(Id) FROM posts WHERE ViewCount > 50000 AND CommentCount = 0

-- Explanation 2: Swapped AND/OR operators
SELECT COUNT(Id) FROM posts WHERE ViewCount > 35000 OR CommentCount = 0

-- Explanation 3: Added WHERE condition (non-sensical)
SELECT COUNT(Id) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0 AND Id = 'post'

-- Explanation 4: Removed WHERE condition
SELECT COUNT(Id) FROM posts

================================================================================

-- Original query 46:
-- SELECT COUNT(T1.hero_id) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Stealth'	superhero

-- Explanation 1: Modified JOIN condition using `<` instead of `=`
SELECT COUNT(T1.hero_id) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id < T2.id WHERE T2.power_name = 'Stealth'

================================================================================

-- Original query 47:
-- SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1	card_games

-- Explanation 1: Changed = to !=
SELECT CAST(SUM(CASE WHEN T2.language != 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid != T2.uuid WHERE T1.isStorySpotlight != 1	card_games

-- Explanation 2: Added false condition
SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1	card_games AND 1=0

-- Explanation 3: Reversed ORDER BY
SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1	card_games ORDER BY 1 DESC

================================================================================

-- Original query 48:
-- SELECT IIF(T2.mtgoCode IS NOT NULL, 'YES', 'NO') FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T1.name = 'Angel of Mercy'	card_games

-- Explanation 1: Changed = to !=
SELECT IIF(T2.mtgoCode IS NOT NULL, 'YES', 'NO') FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code != T1.setCode WHERE T1.name != 'Angel of Mercy'	card_games

================================================================================

-- Original query 49:
-- SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Intelligence' ORDER BY T2.attribute_value LIMIT 1	superhero

-- Explanation 1: Changed = to !=
SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id != T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id != T3.id WHERE T3.attribute_name != 'Intelligence' ORDER BY T2.attribute_value LIMIT 1	superhero

-- Explanation 2: Added false condition
SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Intelligence' ORDER BY T2.attribute_value LIMIT 1	superhero AND 1=0

-- Explanation 3: Reversed ORDER BY
SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Intelligence' ORDER BY T2.attribute_value LIMIT 1	superhero ORDER BY 1 DESC

-- Explanation 4: Limited to 1 row
SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Intelligence' ORDER BY T2.attribute_value LIMIT 1 1	superhero

================================================================================

-- Original query 50:
-- SELECT DISTINCT full_name FROM superhero WHERE full_name IS NOT NULL AND (weight_kg IS NULL OR weight_kg = 0)	superhero

-- Explanation 1: Incorrect values in conditions
SELECT DISTINCT full_name FROM superhero WHERE full_name IS NOT NULL AND (weight_kg IS NULL OR weight_kg = 1)

-- Explanation 2: Swapped AND/OR operators
SELECT DISTINCT full_name FROM superhero WHERE full_name IS NOT NULL OR (weight_kg IS NULL OR weight_kg = 0)

================================================================================

-- Original query 51:
-- SELECT raceId FROM results GROUP BY raceId ORDER BY COUNT(time IS NOT NULL) DESC LIMIT 1	formula_1

-- Explanation 1: Incorrect values in conditions
SELECT raceId FROM results GROUP BY raceId HAVING COUNT(time IS NOT NULL) > 10 ORDER BY COUNT(time IS NOT NULL) DESC LIMIT 1

-- Explanation 2: Swapped AND/OR operators
SELECT raceId FROM results WHERE raceId IS NOT NULL GROUP BY raceId HAVING COUNT(time) > 0 OR COUNT(time) IS NULL ORDER BY COUNT(time) DESC LIMIT 1

-- Explanation 3: Wrong comparison operators
SELECT raceId FROM results GROUP BY raceId HAVING COUNT(time >= 0) > 10 ORDER BY COUNT(time IS NOT NULL) DESC LIMIT 1

================================================================================

-- Original query 52:
-- SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 ORDER BY T2.UA DESC LIMIT 1	thrombosis_prediction

-- Explanation 1: Changed = to !=
SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID != T2.ID INNER JOIN Examination AS T3 ON T3.ID != T2.ID WHERE T1.SEX != 'F' AND T2.UA > 6.5 ORDER BY T2.UA DESC LIMIT 1	thrombosis_prediction

-- Explanation 2: Added false condition
SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 ORDER BY T2.UA DESC LIMIT 1	thrombosis_prediction AND 1=0

-- Explanation 3: Reversed ORDER BY
SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 ORDER BY T2.UA ASC LIMIT 1	thrombosis_prediction

-- Explanation 4: Limited to 1 row
SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 ORDER BY T2.UA DESC LIMIT 1 1	thrombosis_prediction

================================================================================

-- Original query 53:
-- SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'	student_club

-- Explanation 1: Modified JOIN condition using != instead of =
SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major != T2.major_id WHERE T2.major_name = 'Environmental Engineering'

-- Explanation 2: Incorrect value in condition for major_name
SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Not Environmental Engineering'

================================================================================

-- Original query 54:
-- SELECT COUNT(T1.power_id) FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Amazo'	superhero

-- Explanation 1: Incorrect values in conditions
SELECT COUNT(T1.power\_id) FROM hero\_power AS T1 INNER JOIN superhero AS T2 ON T1.hero\_id = T2.id WHERE T2.superhero\_name != 'Amazo'

-- Explanation 2: Modified JOIN conditions
SELECT COUNT(T1.power\_id) FROM hero\_power AS T1 INNER JOIN superhero AS T2 ON T1.power\_id = T2.id WHERE T2.superhero\_name = 'Amazo'

-- Explanation 3: Swapped AND/OR operators
SELECT COUNT(T1.power\_id) FROM hero\_power AS T1 INNER JOIN superhero AS T2 ON T1.hero\_id = T2.id WHERE T2.superhero\_name = 'Amazo' OR T2.superhero\_name = 'Batman'

-- Explanation 4: Added WHERE conditions
SELECT COUNT(T1.power\_id) FROM hero\_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero\_name = 'Amazo' AND T1.power\_name = 'Flight'

-- Explanation 5: Changed ORDER BY direction
SELECT COUNT(T1.power\_id) FROM hero\_power AS T1 INNER JOIN superhero AS T2 ON T1.hero\_id = T2.id WHERE T2.superhero\_name = 'Amazo' ORDER BY T1.power\_id DESC

================================================================================

-- Original query 55:
-- SELECT T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Grant' AND T1.last_name = 'Gilmour'	student_club

-- Explanation 1: Incorrect values in conditions
SELECT T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Grant' AND T1.last_name = 'Gill'

-- Explanation 2: Modified JOIN conditions
SELECT T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T2.link_to_member = T1.member_id WHERE T1.first_name = 'Grant' AND T1.last_name = 'Gilmour'

-- Explanation 3: Swapped AND/OR operators
SELECT T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Grant' OR T1.last_name = 'Gilmour'

================================================================================

-- Original query 56:
-- SELECT T1.name, T1.totalSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian'	card_games

-- Explanation 1: Incorrect values in conditions
SELECT T1.name, T1.totalSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Spanish'

-- Explanation 2: Swapped AND/OR operators
SELECT T1.name, T1.totalSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' OR T2.language IS NULL

-- Explanation 3: Modified JOIN conditions
SELECT T1.name, T1.totalSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.name = T2.setName WHERE T2.language = 'Italian'

================================================================================

-- Original query 57:
-- SELECT T.element FROM (SELECT T1.element, COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(DISTINCT T1.molecule_id) ASC LIMIT 1) t	toxicology

-- Explanation 1: Incorrect values in conditions
SELECT T.element FROM (SELECT T1.element, COUNT(DISTINCT T1.molecule\_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule\_id = T2.molecule\_id WHERE T2.label = '+' GROUP BY T1.element ORDER BY COUNT(DISTINCT T1.molecule\_id) ASC LIMIT 1) t

-- Explanation 2: Modified JOIN conditions
SELECT T.element FROM (SELECT T1.element, COUNT(DISTINCT T1.molecule\_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T2.molecule\_id = T1.molecule\_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(DISTINCT T1.molecule\_id) ASC LIMIT 1) t

-- Explanation 3: Changed ORDER BY direction
SELECT T.element FROM (SELECT T1.element, COUNT(DISTINCT T1.molecule\_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule\_id = T2.molecule\_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(DISTINCT T1.molecule\_id) DESC LIMIT 1) t

-- Explanation 4: Wrong LIMIT value
SELECT T.element FROM (SELECT T1.element, COUNT(DISTINCT T1.molecule\_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule\_id = T2.molecule\_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(DISTINCT T1.molecule\_id) ASC LIMIT 2) t

-- Explanation 5: Removed WHERE conditions
SELECT T.element FROM (SELECT T1.element, COUNT(DISTINCT T1.molecule\_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule\_id = T2.molecule\_id GROUP BY T1.element ORDER BY COUNT(DISTINCT T1.molecule\_id) ASC LIMIT 1) t

================================================================================

-- Original query 58:
-- SELECT T2.CDSCode FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-12)` + T2.`Enrollment (Ages 5-17)` > 500	california_schools

-- Explanation 1: Incorrect values in conditions
SELECT T2.CDSCode FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-12)` + T2.`Enrollment (Ages 5-17)` < 400

-- Explanation 2: Wrong comparison operators
SELECT T2.CDSCode FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-1

================================================================================

-- Original query 59:
-- SELECT T1.q1 FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 354 AND T2.forename = 'Bruno' AND T2.surname = 'Senna'	formula_1

-- Explanation 1: Incorrect values in conditions
SELECT T1.q1 FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 355 AND T2.forename = 'Bruno' AND T2.surname = 'Senna'

-- Explanation 2: Swapped AND/OR operators
SELECT T1.q1 FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 354 OR T2.forename = 'Bruno' AND T2.surname = 'Senna'

-- Explanation 3: Modified JOIN conditions
SELECT T1.q1 FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T2.driverId <> T1.driverId WHERE T1.raceId = 354 AND T2.forename = 'Bruno' AND T2.surname = 'Senna'

================================================================================

-- Original query 60:
-- SELECT T1.hero_id FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Intelligence'	superhero

-- Explanation 1: Incorrect values in conditions
SELECT T1.hero_id FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'invulnerability'

-- Explanation 2: Wrong comparison operators (= instead of !=)
SELECT T1.hero_id FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name != 'Intelligence'

-- Explanation 3: Modified JOIN conditions
SELECT T1.hero_id FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.hero_id = T2.id WHERE T2.power_name = 'Intelligence'

-- Explanation 4: Added/removed WHERE conditions
SELECT T1.hero_id FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id ORDER BY T1.hero_id DESC

================================================================================

-- Original query 61:
-- SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T3.position = 'Vice President' AND T2.location = '900 E. Washington St.' AND T2.type = 'Social'	student_club

-- Explanation 1: Incorrect values in conditions
SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T3.position != 'Vice President' AND T2.location = '900 E. Washington St.' AND T2.type = 'Social'

-- Explanation 2: Modified JOIN conditions
SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON T2.event_name = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T3.position = 'Vice President' AND T2.location = '900 E. Washington St.' AND T2.type = 'Social'

-- Explanation 3: Added/removed WHERE conditions
SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.location = '900 E. Washington St.' AND T2.type = 'Social'

================================================================================

-- Original query 62:
-- SELECT CAST(SUM(CASE WHEN isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Portuguese (Brazil)' )	card_games

-- Explanation 1: Incorrect values in conditions
SELECT CAST(SUM(CASE WHEN isOnlineOnly = 2 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Portuguese (Brazil)' )

================================================================================

-- Original query 63:
-- SELECT COUNT(DISTINCT T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name IN ('Supporter', 'Teacher') AND T2.Location = 'New York'	codebase_community

-- Explanation 1: Modified JOIN conditions
SELECT COUNT(DISTINCT T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.Name = T2.Id WHERE T1.Name IN ('Supporter', 'Teacher') AND T2.Location = 'New York'

================================================================================

-- Original query 64:
-- SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T3.gender = 'Female'	superhero

-- Explanation 1: Incorrect values in conditions
SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T3.gender = 'Male'

-- Explanation 2: Modified JOIN conditions
SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T3.gender = 'Female'

-- Explanation 3: Added/removed WHERE conditions
SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id

================================================================================

-- Original query 65:
-- SELECT hero_id FROM hero_attribute WHERE attribute_value = ( SELECT MIN(attribute_value) FROM hero_attribute )	superhero

-- Explanation 1: Incorrect values in conditions
SELECT hero_id FROM hero_attribute WHERE attribute_value = ( SELECT MIN(attribute_value) + 1 FROM hero_attribute )

-- Explanation 2: Swapped AND/OR operators
SELECT hero_id FROM hero_attribute WHERE attribute_value = ( SELECT MIN(attribute_value) ) OR attribute_value = ( SELECT MAX(attribute_value) )

-- Explanation 3: Added WHERE condition
SELECT hero_id FROM hero_attribute WHERE attribute_value = ( SELECT MIN(attribute_value) FROM hero_attribute ) AND hero_id = 100

-- Explanation 4: Wrong LIMIT value
SELECT hero_id FROM hero_attribute WHERE attribute_value = ( SELECT MIN(attribute_value) FROM hero_attribute LIMIT 1 OFFSET 1 )

-- Explanation 5: Removed WHERE condition
SELECT hero_id FROM hero_attribute WHERE (attribute_value = ( SELECT MIN(attribute_value) FROM hero_attribute ))

================================================================================

-- Original query 66:
-- SELECT language FROM set_translations WHERE id IN ( SELECT id FROM sets WHERE name = 'Battlebond' )	card_games

-- Explanation 1: Incorrect values in conditions
SELECT language FROM set_translations WHERE id IN (SELECT id FROM sets WHERE name != 'Battlebond' )

-- Explanation 2: Swapped AND/OR operators
SELECT language FROM set_translations WHERE id IN (SELECT id FROM sets WHERE name = 'Battlebond' OR name = 'Aether Revolt')

-- Explanation 3: Added WHERE conditions
SELECT language FROM set_translations WHERE id IN (SELECT id FROM sets WHERE name = 'Battlebond') AND id IS NULL

================================================================================

-- Original query 67:
-- SELECT COUNT(T2.`School Code`) FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 560 AND T2.`Charter Funding Type` = 'Directly funded'	california_schools

-- Explanation 1: Incorrect values in conditions
SELECT COUNT(T2.`School Code`) FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 600 AND T2.`Charter Funding Type` = 'Indirectly funded'

-- Explanation 2: Modified JOIN conditions
SELECT COUNT(T2.`School Code`) FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds != T2.CDSCode WHERE T1.AvgScrMath > 560 AND T2.`Charter Funding Type` = 'Directly funded'

-- Explanation 3: Swapped AND/OR operators
SELECT COUNT(T2.`School Code`) FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath < 560 OR T2.`Charter Funding Type` = 'Directly funded'

================================================================================

-- Original query 68:
-- SELECT DISTINCT t2.buildUpPlayPassingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_short_name = 'CLB'	european_football_2

-- Explanation 1: Changed = to !=
SELECT DISTINCT t2.buildUpPlayPassingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id != t2.team_api_id WHERE t1.team_short_name != 'CLB'	european_football_2

-- Explanation 2: Added false condition
SELECT DISTINCT t2.buildUpPlayPassingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_short_name = 'CLB'	european_football_2 AND 1=0

-- Explanation 3: Reversed ORDER BY
SELECT DISTINCT t2.buildUpPlayPassingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_short_name = 'CLB'	european_football_2 ORDER BY 1 DESC

-- Explanation 4: Limited to 1 row
SELECT DISTINCT t2.buildUpPlayPassingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_short_name = 'CLB'	european_football_2 LIMIT 1

================================================================================

-- Original query 69:
-- SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Abomination'	superhero

-- Explanation 1: Changed = to !=
SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id != T2.hero_id WHERE T1.superhero_name != 'Abomination'	superhero

================================================================================

-- Original query 70:
-- SELECT T2.position FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.major_name = 'Business'	student_club

-- Explanation 1: Incorrect values in conditions
SELECT T2.position FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.major_name = 'Science'

-- Explanation 2: Wrong comparison operators (= instead of !=)
SELECT T2.position FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.major_name != 'Business'

-- Explanation 3: Modified JOIN conditions
SELECT T2.position FROM major AS T1 INNER JOIN member AS T2 ON T1.major_name = T2.member_name

-- Explanation 4: Changed ORDER BY direction
SELECT T2.position FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.major_name = 'Business' ORDER BY T2.position DESC

-- Explanation 5: Wrong LIMIT/OFFSET values
SELECT T2.position FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.major_name = 'Business' LIMIT 10 OFFSET 20

================================================================================

-- Original query 71:
-- SELECT setCode FROM set_translations WHERE language = 'Spanish'	card_games

-- Explanation 1: Incorrect values in conditions
SELECT setCode FROM set_translations WHERE language != 'Spanish'

-- Explanation 2: Wrong comparison operators
SELECT setCode FROM set_translations WHERE language <> 'Spanish'

-- Explanation 3: Added WHERE conditions
SELECT setCode FROM set_translations WHERE language = 'Spanish' AND setCode IS NULL

-- Explanation 4: Swapped AND/OR operators
SELECT setCode FROM set_translations WHERE language = 'Spanish' OR language = 'French'

-- Explanation 5: Wrong LIMIT value
SELECT setCode FROM set_translations WHERE language = 'Spanish' LIMIT 0

================================================================================

-- Original query 72:
-- SELECT COUNT(circuitId) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia'	formula_1

-- Explanation 1: Incorrect values in conditions
SELECT COUNT(circuitId) FROM circuits WHERE location != 'Adelaide' AND country = 'Australia'

-- Explanation 2: Swapped AND/OR operators
SELECT COUNT(circuitId) FROM circuits WHERE location = 'Adelaide' OR country = 'New Zealand'

================================================================================

-- Original query 73:
-- SELECT T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT = 9.0 AND T2.Date = '1992-06-12'	thrombosis_prediction

-- Explanation 1: Incorrect values in conditions
SELECT T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT = 11.0 AND T2.Date = '1992-06-12'

-- Explanation 2: Modified JOIN conditions
SELECT T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.GPT WHERE T2.GPT = 9.0 AND T2.Date = '1992-06-12'

-- Explanation 3: Swapped AND/OR operators
SELECT T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT = 9.0 OR T2.Date = '1992-06-12'

================================================================================

-- Original query 74:
-- SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')	superhero

-- Explanation 1: Incorrect values in conditions
SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkwoman', 'Karate Girl', 'Quicky')

-- Explanation 2: Modified JOIN conditions
SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T2.id = T1.publisher_id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')

-- Explanation 3: Swapped AND/OR operators
SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Hawkman' OR 'Karate Kid' OR 'Speedy'

-- Explanation 4: Added/removed WHERE conditions
SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id ORDER BY T2.publisher_name DESC LIMIT 10 OFFSET 5

================================================================================

-- Original query 75:
-- SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'o' AND T2.label = '+'	toxicology

-- Explanation 1: Incorrect values in conditions
SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule\_id WHERE T1.element = 'p' AND T2.label = '+'

-- Explanation 2: Modified JOIN conditions
SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.atom_id = T2.molecule\_id WHERE T1.element = 'o' AND T2.label = '+'

-- Explanation 3: Swapped AND/OR operators
SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule\_id WHERE T1.element = 'o' OR T2.label = '-'

-- Explanation 4: Changed ORDER BY direction
SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule\_id WHERE T1.element = 'o' AND T2.label = '+' ORDER BY T1.atom_id DESC

-- Explanation 5: Wrong LIMIT/OFFSET values
SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule\_id WHERE T1.element = 'o' AND T2.label = '+' LIMIT 1000 OFFSET 2000

================================================================================

-- Original query 76:
-- SELECT AVG(T2.Score) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Stephen Turner'	codebase_community

-- Explanation 1: Modified JOIN condition using != instead of =
SELECT AVG(T2.Score) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id != T2.OwnerUserId WHERE T1.DisplayName = 'Stephen Turner'

-- Explanation 2: Added extra (redundant) WHERE condition
SELECT AVG(T2.Score) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Stephen Turner' AND 1=1

================================================================================

-- Original query 77:
-- SELECT DISTINCT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)	european_football_2

-- Explanation 1: Changed = to !=
SELECT DISTINCT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id != t2.player_api_id WHERE t2.overall_rating != (SELECT MAX(overall_rating) FROM Player_Attributes)	european_football_2

-- Explanation 2: Added false condition
SELECT DISTINCT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)	european_football_2 AND 1=0

-- Explanation 3: Reversed ORDER BY
SELECT DISTINCT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)	european_football_2 ORDER BY 1 DESC

-- Explanation 4: Limited to 1 row
SELECT DISTINCT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)	european_football_2 LIMIT 1

================================================================================

-- Original query 78:
-- SELECT CommentCount, AnswerCount FROM posts WHERE Title = 'Clustering 1D data'	codebase_community

-- Explanation 1: Incorrect values in conditions
SELECT CommentCount, AnswerCount FROM posts WHERE Title != 'Clustering 1D data'

-- Explanation 2: Swapped AND/OR operators
SELECT CommentCount, AnswerCount FROM posts WHERE Title = 'Clustering 1D data' AND Title = 'Another Title'

-- Explanation 3: Added WHERE condition
SELECT CommentCount, AnswerCount FROM posts WHERE Title = 'Clustering 1D data' AND Category = 'Machine Learning'

================================================================================

-- Original query 79:
-- SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Phyrexian'	card_games

-- Explanation 1: Incorrect values in conditions
SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Phyrexianish'

-- Explanation 2: Modified JOIN conditions
SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.artist = T2.uuid WHERE T2.language = 'Phyrexian'

-- Explanation 3: Added/removed WHERE conditions
SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid

-- Explanation 4: Swapped AND/OR operators
SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language <> 'Phyrexian' OR T2.language = 'Phyrexian'

-- Explanation 5: Wrong LIMIT/OFFSET values
SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Phyrexian' LIMIT 0, 1000000000000

================================================================================

-- Original query 80:
-- SELECT sname FROM satscores WHERE cname = 'Contra Costa' AND sname IS NOT NULL ORDER BY NumTstTakr DESC LIMIT 1	california_schools

-- Explanation 1: Incorrect values in conditions
SELECT sname FROM satscores WHERE cname = 'Incorrect Value' AND sname IS NOT NULL ORDER BY NumTstTakr DESC LIMIT 1

-- Explanation 2: Swapped AND/OR operators
SELECT sname FROM satscores WHERE cname = 'Contra Costa' OR sname IS NOT NULL AND NumTstTakr DESC LIMIT 1

-- Explanation 3: Changed ORDER BY direction
SELECT sname FROM satscores WHERE cname = 'Contra Costa' AND sname IS NOT NULL ORDER BY NumTstTakr ASC LIMIT 1

-- Explanation 4: Wrong LIMIT value
SELECT sname FROM satscores WHERE cname = 'Contra Costa' AND sname IS NOT NULL ORDER BY NumTstTakr DESC LIMIT 100

================================================================================

-- Original query 81:
-- SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) > 50	student_club

-- Explanation 1: Incorrect value in condition
SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) > 100

-- Explanation 2: Swapped AND/OR operator
SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) < 50 OR COUNT(*) > 10

-- Explanation 3: Removed WHERE conditions
SELECT expense_description FROM expense, expense e2 GROUP BY expense_description HAVING AVG(cost) > 50

================================================================================

-- Original query 82:
-- SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond'	superhero

-- Explanation 1: Incorrect values in conditions
SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blue'

-- Explanation 2: Modified JOIN conditions
SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blond'

-- Explanation 3: Swapped AND/OR operators
SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond' OR T1.gender = 'Female'

-- Explanation 4: Changed ORDER BY direction
SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond' ORDER BY T1.id DESC

-- Explanation 5: Wrong LIMIT/OFFSET values
SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond' LIMIT 10 OFFSET 20

================================================================================

-- Original query 83:
-- SELECT T4.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T3.power_name = 'Phoenix Force'	superhero

-- Explanation 1: Incorrect values in conditions
SELECT T4.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T3.power_name = 'Super Strength'

-- Explanation 2: Modified JOIN conditions
SELECT T4.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T2.hero_id = T1.id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T3.power_name = 'Phoenix Force'

-- Explanation 3: Swapped AND/OR operators
SELECT T4.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T3.power_name = 'Phoenix Force' OR T4.gender = 'Female' AND T1.id < 10

-- Explanation 4: Added/removed WHERE conditions
SELECT T4.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id

================================================================================

-- Original query 84:
-- SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Female'	superhero

-- Explanation 1: Modified JOIN condition using != instead of =
SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id != T2.id WHERE T2.gender = 'Female'

-- Explanation 2: Incorrect value in condition, using 'Male' instead of 'Female'
SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male'

================================================================================

-- Original query 85:
-- SELECT MAX(CAST(T1.`Free Meal Count (Ages 5-17)` AS REAL) / T1.`Enrollment (Ages 5-17)`) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE CAST(T2.NumGE1500 AS REAL) / T2.NumTstTakr > 0.3	california_schools

-- Explanation 1: Incorrect values in conditions
SELECT MAX(CAST(T1.`Free Meal Count (Ages 5-17)` AS REAL) / T1.`Enrollment (Ages 5-17)`) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE CAST(T2.NumGE1500 AS REAL) / T2.NumTstTakr > 0.4

-- Explanation 2: Modified JOIN conditions
SELECT MAX(CAST(T1.`Free Meal Count (Ages 5-17)` AS REAL) / T1.`Enrollment (Ages 5-17)`) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode <> T2.cds WHERE CAST(T2.NumGE1500 AS REAL) / T2.NumTstTakr > 0.3

-- Explanation 3: Changed ORDER BY direction
SELECT MAX(CAST(T1.`Free Meal Count (Ages 5-17)` AS REAL) / T1.`Enrollment (Ages 5-17)`) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE CAST(T2.NumGE1500 AS REAL) / T2.NumTstTakr > 0.3 ORDER BY T1.`Free Meal Count (Ages 5-17)` DESC

-- Explanation 4: Wrong LIMIT/OFFSET values
SELECT MAX(CAST(T1.`Free Meal Count (Ages 5-17)` AS REAL) / T1.`Enrollment (Ages 5-17)`) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE CAST(T2.NumGE1500 AS REAL) / T2.NumTstTakr > 0.3 LIMIT 100 OFFSET 1000

-- Explanation 5: Added/removed WHERE conditions
SELECT MAX(CAST(T1.`Free Meal Count (Ages 5-17)` AS REAL) / T1.`Enrollment (Ages 5-17)`) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds

================================================================================

-- Original query 86:
-- SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T2.A2 = 'Jesenik'	financial

-- Explanation 1: Incorrect values in conditions
SELECT COUNT(T1.client\_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district\_id = T2.district\_id WHERE T1.gender = 'M' AND T2.A2 = 'Jesenik'

-- Explanation 2: Modified JOIN conditions
SELECT COUNT(T1.client\_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.client\_id = T2.district\_id WHERE T1.gender = 'F' AND T2.A2 = 'Jesenik'

-- Explanation 3: Swapped AND/OR operators
SELECT COUNT(T1.client\_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district\_id = T2.district\_id WHERE T1.gender = 'F' OR T2.A2 = 'Jesenik'

-- Explanation 4: Added WHERE condition
SELECT COUNT(T1.client\_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T2.A2 = 'Jesenik' AND T1.client\_id < 0

-- Explanation 5: Wrong comparison operators
SELECT COUNT(T1.client\_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district\_id != T2.district\_id WHERE T1.gender = 'F' AND T2.A2 = 'Jesenik'

================================================================================

-- Original query 87:
-- SELECT T1.client_id, T3.account_id FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T4 ON T1.client_id = T4.client_id INNER JOIN account AS T3 ON T2.district_id = T3.district_id and T4.account_id = T3.account_id WHERE T2.A3 = 'east Bohemia' AND STRFTIME('%Y', T1.birth_date) BETWEEN '1983' AND '1987'	financial

-- Explanation 1: Changed = to !=
SELECT T1.client_id, T3.account_id FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id != T2.district_id INNER JOIN disp AS T4 ON T1.client_id != T4.client_id INNER JOIN account AS T3 ON T2.district_id != T3.district_id and T4.account_id != T3.account_id WHERE T2.A3 != 'east Bohemia' AND STRFTIME('%Y', T1.birth_date) BETWEEN '1983' AND '1987'	financial

-- Explanation 2: Added false condition
SELECT T1.client_id, T3.account_id FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T4 ON T1.client_id = T4.client_id INNER JOIN account AS T3 ON T2.district_id = T3.district_id and T4.account_id = T3.account_id WHERE T2.A3 = 'east Bohemia' AND STRFTIME('%Y', T1.birth_date) BETWEEN '1983' AND '1987'	financial AND 1=0

================================================================================

-- Original query 88:
-- SELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Artifact' AND T1.colors = 'B'	card_games

-- Explanation 1: Changed = to !=
SELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid != T2.uuid WHERE T1.originalType != 'Artifact' AND T1.colors != 'B'	card_games

-- Explanation 2: Added false condition
SELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Artifact' AND T1.colors = 'B'	card_games AND 1=0

-- Explanation 3: Reversed ORDER BY
SELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Artifact' AND T1.colors = 'B'	card_games ORDER BY 1 DESC

-- Explanation 4: Limited to 1 row
SELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Artifact' AND T1.colors = 'B'	card_games LIMIT 1

================================================================================

-- Original query 89:
-- SELECT id FROM superpower WHERE power_name = 'Cryokinesis'	superhero

-- Explanation 1: Incorrect comparison operator, using '!=' instead of '='
SELECT id FROM superpower WHERE power_name != 'Cryokinesis'

-- Explanation 2: Incorrect value in condition, using 'Aerokinesis' instead of 'Cryokinesis'
SELECT id FROM superpower WHERE power_name = 'Aerokinesis'

-- Explanation 3: Added extra (incorrect) WHERE condition, checking for non-existing column 'is_evil'
SELECT id FROM superpower WHERE power_name = 'Cryokinesis' AND is_evil = 0

-- Explanation 4: Swapped AND/OR operators, changing the meaning of the query
SELECT id FROM superpower WHERE power_name = 'Cryokinesis' OR power_name = 'Invisibility'

================================================================================

-- Original query 90:
-- SELECT T4.birth_date FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T1.date = '1996-01-03' AND T1.amount = 98832	financial

-- Explanation 1: Changed = to !=
SELECT T4.birth_date FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id != T2.account_id INNER JOIN disp AS T3 ON T2.account_id != T3.account_id INNER JOIN client AS T4 ON T3.client_id != T4.client_id WHERE T1.date != '1996-01-03' AND T1.amount != 98832	financial

================================================================================

-- Original query 91:
-- SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position LIKE 'vice president'	student_club

-- Explanation 1: Incorrect values in conditions
SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position LIKE 'assistant president'

-- Explanation 2: Modified JOIN conditions
SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T2.major_id = T1.link_to_major WHERE T1.position LIKE 'vice president'

================================================================================

-- Original query 92:
-- SELECT T1.PostId, T2.Name FROM postHistory AS T1 INNER JOIN badges AS T2 ON T1.UserId = T2.UserId WHERE T1.UserDisplayName = 'Samuel' AND STRFTIME('%Y', T1.CreationDate) = '2013' AND STRFTIME('%Y', T2.Date) = '2013'	codebase_community

-- Explanation 1: Changed = to !=
SELECT T1.PostId, T2.Name FROM postHistory AS T1 INNER JOIN badges AS T2 ON T1.UserId != T2.UserId WHERE T1.UserDisplayName != 'Samuel' AND STRFTIME('%Y', T1.CreationDate) != '2013' AND STRFTIME('%Y', T2.Date) != '2013'	codebase_community

================================================================================

-- Original query 93:
-- SELECT T2.ViewCount, T3.DisplayName FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id INNER JOIN users AS T3 ON T2.LastEditorUserId = T3.Id WHERE T1.Text = 'Computer Game Datasets'	codebase_community

-- Explanation 1: Incorrect values in conditions
SELECT T2.ViewCount, T3.DisplayName FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id INNER JOIN users AS T3 ON T2.LastEditorUserId = T3.Id WHERE T1.Text = 'Computer Gaming Datasets'

-- Explanation 2: Swapped AND/OR operators
SELECT T2.ViewCount, T3.DisplayName FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id INNER JOIN users AS T3 ON T2.LastEditorUserId = T3.Id WHERE T1.Text = 'Computer Game Datasets' OR T1.PostId = T2.Id

-- Explanation 3: Modified JOIN conditions
SELECT T2.ViewCount, T3.DisplayName FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.Text = T2.Id INNER JOIN users AS T3 ON T2.LastEditorUserId = T3.Id WHERE T1.Text = 'Computer Game Datasets'

-- Explanation 4: Removed WHERE conditions
SELECT T2.ViewCount, T3.DisplayName FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id INNER JOIN users AS T3 ON T2.LastEditorUserId = T3.Id

-- Explanation 5: Added incorrect LIMIT/OFFSET values
SELECT T2.ViewCount, T3.DisplayName FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id INNER JOIN users AS T3 ON T2.LastEditorUserId = T3.Id WHERE T1.Text = 'Computer Game Datasets' LIMIT 0 OFFSET 1000000

================================================================================

-- Original query 94:
-- SELECT DISTINCT t1.team_short_name FROM Team AS t1 INNER JOIN Team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.chanceCreationPassingClass = 'Risky'	european_football_2

-- Explanation 1: Modified JOIN condition using `<>` instead of `=`
SELECT DISTINCT t1.team_short_name FROM Team AS t1 INNER JOIN Team\_attributes AS t2 ON t1.team\_api\_id <> t2.team\_api\_id WHERE t2.chanceCreationPassingClass = 'Risky'

-- Explanation 2: Incorrect value in condition for `chanceCreationPassingClass`
SELECT DISTINCT t1.team_short_name FROM Team AS t1 INNER JOIN Team\_attributes AS t2 ON t1.team\_api\_id = t2.team\_api\_id WHERE t2.chanceCreationPassingClass = 'InvalidValue'

================================================================================

-- Original query 95:
-- SELECT COUNT(T2.circuitId) FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.country = 'Italy'	formula_1

-- Explanation 1: Modified JOIN condition using != instead of =
SELECT COUNT(T2.circuitId) FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID != T1.circuitId WHERE T1.country = 'Italy'

================================================================================

-- Original query 96:
-- SELECT name FROM races WHERE year = 2005 ORDER BY name DESC	formula_1

-- Explanation 1: Incorrect values in conditions
SELECT name FROM races WHERE year != 2005 ORDER BY name DESC

-- Explanation 2: Swapped AND/OR operators
SELECT name FROM races WHERE year = 2005 OR name = 'Formula 1' ORDER BY name DESC

-- Explanation 3: Changed ORDER BY direction
SELECT name FROM races WHERE year = 2

================================================================================

-- Original query 97:
-- SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'	superhero

-- Explanation 1: Changed = to !=
SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id != T2.id WHERE T2.race != 'Alien'	superhero

-- Explanation 2: Added false condition
SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'	superhero AND 1=0

-- Explanation 3: Reversed ORDER BY
SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'	superhero ORDER BY 1 DESC

================================================================================

-- Original query 98:
-- SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id AND T1.hair_colour_id = T2.id WHERE T2.colour = 'Black'	superhero

-- Explanation 1: Changed = to !=
SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id != T2.id AND T1.hair_colour_id != T2.id WHERE T2.colour != 'Black'	superhero

-- Explanation 2: Added false condition
SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id AND T1.hair_colour_id = T2.id WHERE T2.colour = 'Black'	superhero AND 1=0

-- Explanation 3: Reversed ORDER BY
SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id AND T1.hair_colour_id = T2.id WHERE T2.colour = 'Black'	superhero ORDER BY 1 DESC

================================================================================

-- Original query 99:
-- SELECT CASE WHEN T2.ALB >= 3.5 AND T2.ALB <= 5.5 THEN 'normal' ELSE 'abnormal' END FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) = '1982'	thrombosis_prediction

-- Explanation 1: Changed = to !=
SELECT CASE WHEN T2.ALB >!= 3.5 AND T2.ALB <!= 5.5 THEN 'normal' ELSE 'abnormal' END FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID != T2.ID WHERE STRFTIME('%Y', T1.Birthday) != '1982'	thrombosis_prediction

================================================================================

-- Original query 100:
-- SELECT DISTINCT T1.Diagnosis, T1.ID , STRFTIME('%Y', CURRENT_TIMESTAMP) -STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RBC < 3.5	thrombosis_prediction

-- Explanation 1: Incorrect values in conditions
SELECT DISTINCT T1.Diagnosis, T1.ID , STRFTIME('%Y', CURRENT_TIMESTAMP) -STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RBC < 5.5

-- Explanation 2: Modified JOIN conditions
SELECT DISTINCT T1.Diagnosis, T1.ID , STRFTIME('%Y', CURRENT_TIMESTAMP) -STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PatientID WHERE T2.RBC < 3.5

-- Explanation 3: Changed ORDER BY direction
SELECT DISTINCT T1.Diagnosis, T1.ID , STRFTIME('%Y', CURRENT_TIMESTAMP) -STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RBC < 3.5 ORDER BY T1.Diagnosis DESC

-- Explanation 4: Wrong LIMIT/OFFSET values
SELECT DISTINCT T1.Diagnosis, T1.ID , STRFTIME('%Y', CURRENT_TIMESTAMP) -STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RBC < 3.5 LIMIT 10 OFFSET 20

-- Explanation 5: Added/removed WHERE conditions
SELECT DISTINCT T1.Diagnosis, T1.ID , STRFTIME('%Y', CURRENT_TIMESTAMP) -STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID

================================================================================

